{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Assessment2/task-management-system/src/utils/router.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport routes from './routes';\nimport { useAuth } from './AuthContext';\nimport Login from '../pages/Login';\n\n// const PrivateRoute = ({ element, ...rest }) => {\n//     const { authenticated } = useAuth();\n\n//     return (\n//         <React.Fragment>\n//             {\n//                 authenticated ? <Route {...rest} element={element} /> :\n//                     <Route path=\"/login\" element={element} />\n//             }\n//         </React.Fragment>\n//     );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  _s();\n  const {\n    authenticated\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: routes.map(({\n        path,\n        component,\n        exact,\n        isPrivate\n      }, index) => isPrivate ? /*#__PURE__*/_jsxDEV(Route, {\n        path: authenticated ? path : \"/login\",\n        element: authenticated ? /*#__PURE__*/_jsxDEV(\"component\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 54\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 70\n        }, this) // Corrected this line\n        ,\n        exact: exact\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(\"component\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 38\n        }, this) // Corrected this line\n        ,\n        exact: exact\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(AppRouter, \"bQCfH9eGArgiSUkc5JVdk8s2VAA=\", false, function () {\n  return [useAuth];\n});\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Routes","Route","BrowserRouter","routes","useAuth","Login","jsxDEV","_jsxDEV","AppRouter","_s","authenticated","children","map","path","component","exact","isPrivate","index","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Assessment2/task-management-system/src/utils/router.js"],"sourcesContent":["\nimport React from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport routes from './routes';\nimport { useAuth } from './AuthContext';\nimport Login from '../pages/Login';\n\n// const PrivateRoute = ({ element, ...rest }) => {\n//     const { authenticated } = useAuth();\n\n//     return (\n//         <React.Fragment>\n//             {\n//                 authenticated ? <Route {...rest} element={element} /> :\n//                     <Route path=\"/login\" element={element} />\n//             }\n//         </React.Fragment>\n//     );\n// };\n\nconst AppRouter = () => {\n    const { authenticated } = useAuth();\n\n    return (\n        <BrowserRouter>\n            <Routes>\n                {routes.map(({ path, component, exact, isPrivate }, index) => (\n                    isPrivate ? (\n                        <Route\n                            key={index}\n                            path={authenticated ? path : \"/login\"}\n                            element={authenticated ? <component /> : <Login />}  // Corrected this line\n                            exact={exact}\n                        />\n                    ) : (\n                        <Route\n                            key={index}\n                            path={path}\n                            element={<component />}  // Corrected this line\n                            exact={exact}\n                        />\n                    )\n                ))}\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default AppRouter;\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,aAAa,QAAQ,kBAAkB;AAC/D,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,KAAK,MAAM,gBAAgB;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAc,CAAC,GAAGN,OAAO,CAAC,CAAC;EAEnC,oBACIG,OAAA,CAACL,aAAa;IAAAS,QAAA,eACVJ,OAAA,CAACP,MAAM;MAAAW,QAAA,EACFR,MAAM,CAACS,GAAG,CAAC,CAAC;QAAEC,IAAI;QAAEC,SAAS;QAAEC,KAAK;QAAEC;MAAU,CAAC,EAAEC,KAAK,KACrDD,SAAS,gBACLT,OAAA,CAACN,KAAK;QAEFY,IAAI,EAAEH,aAAa,GAAGG,IAAI,GAAG,QAAS;QACtCK,OAAO,EAAER,aAAa,gBAAGH,OAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,gBAAGf,OAAA,CAACF,KAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE,CAAE;QAAA;QACrDP,KAAK,EAAEA;MAAM,GAHRE,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CAAC,gBAEFf,OAAA,CAACN,KAAK;QAEFY,IAAI,EAAEA,IAAK;QACXK,OAAO,eAAEX,OAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAE,CAAE;QAAA;QACzBP,KAAK,EAAEA;MAAM,GAHRE,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CAER;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAExB,CAAC;AAACb,EAAA,CA1BID,SAAS;EAAA,QACeJ,OAAO;AAAA;AAAAmB,EAAA,GAD/Bf,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}