{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Assessment2/task-management-system/src/utils/router.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Routes, Route, BrowserRouter, Navigate } from 'react-router-dom';\nimport routes from './routes';\nimport { useAuth } from './AuthContext';\nimport Login from '../pages/Login';\n\n// const PrivateRoute = ({ element, ...rest }) => {\n//     const { authenticated } = useAuth();\n\n//     return (\n//         <React.Fragment>\n//             {\n//                 authenticated ? <Route {...rest} element={element} /> :\n//                     <Route path=\"/login\" element={element} />\n//             }\n//         </React.Fragment>\n//     );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  _s();\n  const {\n    authenticated\n  } = useAuth();\n  console.log({\n    authenticated\n  });\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: routes.map(({\n        path,\n        element,\n        isPrivate\n      }, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isPrivate && authenticated ? /*#__PURE__*/_jsxDEV(Route, {\n          path: path,\n          element: element\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 55\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: '/login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 30\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(AppRouter, \"bQCfH9eGArgiSUkc5JVdk8s2VAA=\", false, function () {\n  return [useAuth];\n});\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Routes","Route","BrowserRouter","Navigate","routes","useAuth","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","AppRouter","_s","authenticated","console","log","children","map","path","element","isPrivate","index","fileName","_jsxFileName","lineNumber","columnNumber","replace","to","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Assessment2/task-management-system/src/utils/router.js"],"sourcesContent":["\nimport React from 'react';\nimport { Routes, Route, BrowserRouter, Navigate } from 'react-router-dom';\nimport routes from './routes';\nimport { useAuth } from './AuthContext';\nimport Login from '../pages/Login';\n\n// const PrivateRoute = ({ element, ...rest }) => {\n//     const { authenticated } = useAuth();\n\n//     return (\n//         <React.Fragment>\n//             {\n//                 authenticated ? <Route {...rest} element={element} /> :\n//                     <Route path=\"/login\" element={element} />\n//             }\n//         </React.Fragment>\n//     );\n// };\n\nconst AppRouter = () => {\n    const { authenticated } = useAuth();\n\n    console.log({ authenticated });\n\n    return (\n        <BrowserRouter>\n            <Routes>\n                {routes.map(({ path, element, isPrivate }, index) => (\n\n                    <>\n\n                        {isPrivate && authenticated ? <Route\n                            key={index}\n                            path={path}\n                            element={element}\n\n                        /> : <Navigate\n                        replace\n                            to={'/login'}\n\n                        />}\n                    </>\n                ))}\n\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default AppRouter;\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,KAAK,MAAM,gBAAgB;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAc,CAAC,GAAGR,OAAO,CAAC,CAAC;EAEnCS,OAAO,CAACC,GAAG,CAAC;IAAEF;EAAc,CAAC,CAAC;EAE9B,oBACIL,OAAA,CAACN,aAAa;IAAAc,QAAA,eACVR,OAAA,CAACR,MAAM;MAAAgB,QAAA,EACFZ,MAAM,CAACa,GAAG,CAAC,CAAC;QAAEC,IAAI;QAAEC,OAAO;QAAEC;MAAU,CAAC,EAAEC,KAAK,kBAE5Cb,OAAA,CAAAE,SAAA;QAAAM,QAAA,EAEKI,SAAS,IAAIP,aAAa,gBAAGL,OAAA,CAACP,KAAK;UAEhCiB,IAAI,EAAEA,IAAK;UACXC,OAAO,EAAEA;QAAQ,GAFZE,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CAAC,gBAAGjB,OAAA,CAACL,QAAQ;UACduB,OAAO;UACHC,EAAE,EAAE;QAAS;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhB;MAAC,gBACJ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAExB,CAAC;AAACb,EAAA,CA5BID,SAAS;EAAA,QACeN,OAAO;AAAA;AAAAuB,EAAA,GAD/BjB,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}